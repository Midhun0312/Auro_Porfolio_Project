{"ast":null,"code":"var _jsxFileName = \"/Users/midhun/Desktop/RESUME/auro/AuroDigital/DigitalPortfolioBuilder/frontend/src/components/PortfolioList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchPortfolios } from '../services/api';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioList = () => {\n  _s();\n  const [portfolios, setPortfolios] = useState([]);\n  useEffect(() => {\n    const getPortfolios = async () => {\n      try {\n        const {\n          data\n        } = await fetchPortfolios();\n        setPortfolios(data);\n      } catch (err) {\n        console.error('Error fetching portfolios:', err);\n      }\n    };\n    getPortfolios();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Portfolioz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: portfolios.map(portfolio => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/portfolio/${portfolio._id}`,\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: portfolio.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-email\",\n          children: portfolio.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, portfolio._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(PortfolioList, \"ncSGm8O8RC4VEfzRRCu2OC9gRng=\");\n_c = PortfolioList;\nexport default PortfolioList;\nvar _c;\n$RefreshReg$(_c, \"PortfolioList\");","map":{"version":3,"names":["React","useEffect","useState","Link","fetchPortfolios","jsxDEV","_jsxDEV","PortfolioList","_s","portfolios","setPortfolios","getPortfolios","data","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","portfolio","to","_id","name","email","_c","$RefreshReg$"],"sources":["/Users/midhun/Desktop/RESUME/auro/AuroDigital/DigitalPortfolioBuilder/frontend/src/components/PortfolioList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchPortfolios } from '../services/api';\nimport '../App.css';\n\nconst PortfolioList = () => {\n    const [portfolios, setPortfolios] = useState([]);\n\n    useEffect(() => {\n        const getPortfolios = async () => {\n            try {\n                const { data } = await fetchPortfolios();\n                setPortfolios(data);\n            } catch (err) {\n                console.error('Error fetching portfolios:', err);\n            }\n        };\n        getPortfolios();\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <h2>All Portfolioz</h2>\n            <div className=\"card-grid\">\n                {portfolios.map((portfolio) => (\n                    <Link\n                        to={`/portfolio/${portfolio._id}`} \n                        className=\"card\"\n                        key={portfolio._id}\n                    >\n                        <h3 className=\"card-title\">{portfolio.name}</h3>\n                        <p className=\"card-email\">{portfolio.email}</p>\n                    </Link>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default PortfolioList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMR,eAAe,CAAC,CAAC;QACxCM,aAAa,CAACE,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MACpD;IACJ,CAAC;IACDF,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBX,OAAA;MAAAW,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBf,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBR,UAAU,CAACa,GAAG,CAAEC,SAAS,iBACtBjB,OAAA,CAACH,IAAI;QACDqB,EAAE,EAAE,cAAcD,SAAS,CAACE,GAAG,EAAG;QAClCT,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAGhBX,OAAA;UAAIU,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEM,SAAS,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChDf,OAAA;UAAGU,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEM,SAAS,CAACI;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH1CE,SAAS,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACb,EAAA,CAhCID,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}